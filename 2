def func1(arg1, arg2):
    var31 = var5(arg1, arg2)
    var50 = var34(arg2, var31)
    var51 = var50 - 676120862
    var52 = 541 | (arg2 | 1516544235) & -260664183
    var53 = arg1 | (arg1 + (var50 + var51))
    var54 = var31 | (var50 & var51) ^ -267
    var55 = var31 ^ (1436216996 | var52) & arg1
    var56 = var31 | var52
    var57 = ((var54 & arg2) & var31) - var50
    var58 = (var54 - var53) | var57 & arg2
    var59 = (var56 - var31 & var51) | var54
    var60 = var51 - 151
    var61 = var51 - var58 & var56 | arg1
    var62 = ((var60 + var52) ^ var54) ^ var53
    result = 801107466 - -270955580 ^ (var51 - arg2 + var57 - arg2) + arg2
    return result
def func8(arg35, arg36):
    var39 = class9()
    for var40 in range(28):
        var39.func10(arg36, arg36)
    var47 = var43(arg36, arg35)
    var48 = arg35 + var47
    var49 = (944460363 - arg36) ^ 124
    result = 404 | (arg36 | (var48 - 402 | var47))
    return result
def func13(arg44, arg45):
    var46 = -1612749988 ^ arg44
    result = 871 + ((arg44 | (((-1706231884 | 794) & arg45) & -2037565079) & (arg45 - arg44 | (655 & -921))) ^ 1443740494) | arg44
    return result
def func12():
    closure = [-7]
    def func11(arg41, arg42):
        closure[0] += func13(arg41, arg42)
        return closure[0]
    func = func11
    return func
var43 = func12()
class class9(object):
    def func10(self, arg37, arg38):
        result = -1392971787 + arg38
        return result
def func7():
    closure = [0]
    def func6(arg32, arg33):
        closure[0] += func8(arg32, arg33)
        return closure[0]
    func = func6
    return func
var34 = func7()
def func4(arg6, arg7):
    var11 = func5(arg7, arg6)
    var12 = (982008776 ^ var11 ^ var11) | arg6
    var13 = -938 + var12 - var11
    var14 = var12 - arg7 - var11 | -792458466
    var15 = (arg6 & 709819419) - -135 - var12
    var16 = ((-1327485431 + arg6) | arg6) ^ arg6
    var17 = (var15 & var15) + var13 + var16
    var18 = arg7 & var15 ^ arg6 ^ var17
    var19 = 182 & -492
    var20 = (-104076268 & var12 | var19) & var19
    var21 = var11 - (var16 + var17) | arg7
    var22 = (arg6 ^ (var18 + var12)) + var21
    var23 = var17 + (arg6 ^ 1076264585) & arg7
    var24 = arg6 + (arg6 ^ var21)
    var25 = var22 + var22
    var26 = ((-557 | var25) - var13) - var23
    if var17 < var16:
        var27 = ((var20 ^ var11) & 696) - var25
    else:
        var27 = var20 & var20 + var19
    var28 = var19 & var11
    var29 = var28 & var18
    var30 = var24 + -1411091439
    result = arg6 | var22 - var17 + -695831442 - ((arg7 | var24) - var17) & (arg7 & -602 | var22 | var13 | var14)
    return result
def func5(arg8, arg9):
    var10 = arg8 - (arg8 + (90177872 + (arg9 - -1608312144 & arg8) + -1723842998 + (arg9 + ((arg8 ^ ((((997 + -887 + 880555924 ^ 506934561) + arg8 ^ -129) - 370 - -1429957998) & 2075784379)) ^ -82 + arg8)))) | arg9 | arg8
    result = (71 + arg9 | arg8 | -1273294268 & (arg8 ^ -71983872 ^ 40) + arg8 & arg8 ^ arg8 | 1576675211) - arg8
    return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
